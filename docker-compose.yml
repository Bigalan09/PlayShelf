version: '3.8'

services:
  postgres:
    image: postgres:16-alpine
    container_name: playshelf-postgres
    environment:
      POSTGRES_DB: playshelf_dev
      POSTGRES_USER: playshelf_user
      POSTGRES_PASSWORD: playshelf_password
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - playshelf-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U playshelf_user -d playshelf_dev"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: playshelf-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - playshelf-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    command: redis-server --appendonly yes

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: playshelf-backend
    ports:
      - "3001:3001"
    environment:
      NODE_ENV: development
      PORT: 3001
      DATABASE_URL: postgresql://playshelf_user:playshelf_password@postgres:5432/playshelf_dev
      REDIS_URL: redis://redis:6379
      JWT_SECRET: dev-jwt-secret-change-in-production
      CORS_ORIGIN: http://localhost:5173
    volumes:
      - ./backend:/app
      - /app/node_modules
    networks:
      - playshelf-network
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    develop:
      watch:
        - action: sync
          path: ./backend/src
          target: /app/src
        - action: rebuild
          path: ./backend/package.json

  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: playshelf-frontend
    ports:
      - "5173:5173"
    environment:
      NODE_ENV: development
      VITE_API_URL: http://localhost:3001
    volumes:
      - .:/app:cached
      - frontend_node_modules:/app/node_modules
    networks:
      - playshelf-network
    depends_on:
      - backend
    develop:
      watch:
        - action: sync
          path: ./src
          target: /app/src
        - action: rebuild
          path: ./package.json

volumes:
  postgres_data:
  redis_data:
  frontend_node_modules:

networks:
  playshelf-network:
    driver: bridge